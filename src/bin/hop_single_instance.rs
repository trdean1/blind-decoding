extern crate blindsolver;
extern crate env_logger;
extern crate nalgebra as na;

use blindsolver::tableau::FlexTab;

fn main() {
    env_logger::init();

    let y = na::DMatrix::from_column_slice(6, 10, &vec![
        -2.5794679409527044, 2.9365955758007125, -0.7756723101937744, 0.15265719475784692,
         -3.927040244506902, -0.15195689835389137, -3.019985937903706, 3.8050310156155795,
         -3.307335742124903, 0.909520250678072, 2.851474519626441, -4.062938316327018,
         -0.2952944749078328, 2.2175602322051002, -2.2399098044895314, -1.4222703166411659,
         -4.175739965442462, 1.48399545689906, -4.152719286675184, 3.1685810616684593,
         1.5741789241827941, -0.14151053079858725, -0.7118251420161945, -7.963601053714742,
         -2.566252441758679, -0.2685764428146946, 2.9374983819102365, 2.41330290011555,
         -2.270071961180847, -5.138956693628234, -0.7450517128143144, -0.39093911250751656,
         -0.25587084722711695, 2.6798219870604445, 1.4395249400941927, -5.787604056643763,
         -0.535423616943794, -1.9371034171028731, 3.8692396956643336, 1.3590357887564766,
         -1.0847312629337182, -2.2914494044821287, -2.26039320189145, 3.2853962962444943,
         -3.2779279691271324, 0.5488816673545345, 5.554858753630734, -5.93386639273711,
         -2.0507651060209295, 1.739231991649138, 0.8471825737643183, -0.7719045309494337,
         3.030602550602822, -2.437711740575476, 0.526184375988314, -1.5398313674246102,
         0.6464626935292095, 1.9861934590249088, -0.07851859566297059, -1.069168691087567
    ]);

    let u_i = na::DMatrix::from_column_slice(6, 6, &vec![
        -3.0875641679332335, 2.705451683307537, -5.848740837397192, 0.6809260311545136,
         0.7042258256794147, -4.38626649142435, -3.313458021427632, 2.6637586938881856,
         -6.017592005834506, 1.1548449197412227, 1.3315988894458741, -4.65991454718955,
         -1.194255323729322, 1.3141128612355393, -3.1839237664020517, 0.4322813457116369,
         0.8544661148541725, -2.18677119355133, -1.884989664714193, 1.2971427967836893,
         -2.474246350415146, 0.10369511800624413, 1.3034811287389312, -2.2875965481000904,
         -0.031143458555502684, -0.24048033468702953, -0.3890096710876212, 0.07817046609768294,
         0.14414479574755865, -0.0026280435510228906, -0.03368200395663698, -0.2182902771691189,
         0.23053941160187771, 0.05546430640074739, 0.4210214932996452, -0.08377654015223478,
	]);


    //let mut passed = false;

    let mut ft = match FlexTab::new( &u_i, &y, 1e-9 ) {
        Ok(ft) => ft,
        Err(e) => { 
            println!("Error: {}", e);
            return;
        },
    };

    match ft.solve() {
        Ok(_) => {
            println!("Solved");
            //passed = true;
        },
        Err(e) => {
            println!("{}", e);
            println!("ft = {}", ft);
        },
    }

    //assert!(passed);
}
